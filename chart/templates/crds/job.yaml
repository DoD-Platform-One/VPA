apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "vertical-pod-autoscaler.crds.fullname" . }}
  labels:
    {{- include "vertical-pod-autoscaler.crds.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  template:
    {{- if or .Values.crds.podAnnotations .Values.commonAnnotations }}
    metadata:
      annotations:
        {{- if .Values.crds.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.crds.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vertical-pod-autoscaler.crds.fullname" . }}
      containers:
        - name: kubectl
          image: "{{ .Values.crds.image.repository }}:{{ .Values.crds.image.tag }}"
          imagePullPolicy: {{ .Values.crds.image.pullPolicy }}
          command:
          - /bin/bash
          - -c
          - |
            kubectl apply {{- range $path, $_ := $.Files.Glob  "files/crds/*" }} --filename=/config/{{ base $path }} {{ end }}
            {{- if .Values.istio.enabled }}
              until curl -fsI http://localhost:15021/healthz/ready; do echo \"Waiting for Istio sidecar proxy...\"; sleep 3; done && sleep 5 && echo \"Stopping the istio proxy...\" && curl -X POST http://localhost:15020/quitquitquit
            {{- end}}
            exit 0
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
      {{- with .Values.crds.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crds.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crds.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      volumes:
        - name: config
          configMap:
            name: {{ include "vertical-pod-autoscaler.crds.fullname" . }}
